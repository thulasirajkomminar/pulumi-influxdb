// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTask(args: GetTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetTaskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("influxdb:index/getTask:getTask", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getTask.
 */
export interface GetTaskArgs {
    id: string;
}

/**
 * A collection of values returned by getTask.
 */
export interface GetTaskResult {
    readonly authorizationId: string;
    readonly createdAt: string;
    readonly cron: string;
    readonly description: string;
    readonly every: string;
    readonly flux: string;
    readonly id: string;
    readonly labels: outputs.GetTaskLabel[];
    readonly lastRunError: string;
    readonly lastRunStatus: string;
    readonly latestCompleted: string;
    readonly links: outputs.GetTaskLinks;
    readonly name: string;
    readonly offset: string;
    readonly org: string;
    readonly orgId: string;
    readonly ownerId: string;
    readonly status: string;
    readonly updatedAt: string;
}
export function getTaskOutput(args: GetTaskOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTaskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("influxdb:index/getTask:getTask", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getTask.
 */
export interface GetTaskOutputArgs {
    id: pulumi.Input<string>;
}
