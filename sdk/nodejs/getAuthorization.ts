// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAuthorization(args: GetAuthorizationArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthorizationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("influxdb:index/getAuthorization:getAuthorization", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuthorization.
 */
export interface GetAuthorizationArgs {
    id: string;
}

/**
 * A collection of values returned by getAuthorization.
 */
export interface GetAuthorizationResult {
    readonly createdAt: string;
    readonly description: string;
    readonly id: string;
    readonly org: string;
    readonly orgId: string;
    readonly permissions: outputs.GetAuthorizationPermission[];
    readonly status: string;
    readonly token: string;
    readonly updatedAt: string;
    readonly user: string;
    readonly userId: string;
}
export function getAuthorizationOutput(args: GetAuthorizationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAuthorizationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("influxdb:index/getAuthorization:getAuthorization", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuthorization.
 */
export interface GetAuthorizationOutputArgs {
    id: pulumi.Input<string>;
}
