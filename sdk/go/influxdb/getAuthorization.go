// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package influxdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/thulasirajkomminar/pulumi-influxdb/sdk/go/influxdb/internal"
)

func LookupAuthorization(ctx *pulumi.Context, args *LookupAuthorizationArgs, opts ...pulumi.InvokeOption) (*LookupAuthorizationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAuthorizationResult
	err := ctx.Invoke("influxdb:index/getAuthorization:getAuthorization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthorization.
type LookupAuthorizationArgs struct {
	Id string `pulumi:"id"`
}

// A collection of values returned by getAuthorization.
type LookupAuthorizationResult struct {
	CreatedAt   string                       `pulumi:"createdAt"`
	Description string                       `pulumi:"description"`
	Id          string                       `pulumi:"id"`
	Org         string                       `pulumi:"org"`
	OrgId       string                       `pulumi:"orgId"`
	Permissions []GetAuthorizationPermission `pulumi:"permissions"`
	Status      string                       `pulumi:"status"`
	Token       string                       `pulumi:"token"`
	UpdatedAt   string                       `pulumi:"updatedAt"`
	User        string                       `pulumi:"user"`
	UserId      string                       `pulumi:"userId"`
}

func LookupAuthorizationOutput(ctx *pulumi.Context, args LookupAuthorizationOutputArgs, opts ...pulumi.InvokeOption) LookupAuthorizationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAuthorizationResultOutput, error) {
			args := v.(LookupAuthorizationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("influxdb:index/getAuthorization:getAuthorization", args, LookupAuthorizationResultOutput{}, options).(LookupAuthorizationResultOutput), nil
		}).(LookupAuthorizationResultOutput)
}

// A collection of arguments for invoking getAuthorization.
type LookupAuthorizationOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupAuthorizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthorizationArgs)(nil)).Elem()
}

// A collection of values returned by getAuthorization.
type LookupAuthorizationResultOutput struct{ *pulumi.OutputState }

func (LookupAuthorizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthorizationResult)(nil)).Elem()
}

func (o LookupAuthorizationResultOutput) ToLookupAuthorizationResultOutput() LookupAuthorizationResultOutput {
	return o
}

func (o LookupAuthorizationResultOutput) ToLookupAuthorizationResultOutputWithContext(ctx context.Context) LookupAuthorizationResultOutput {
	return o
}

func (o LookupAuthorizationResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupAuthorizationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupAuthorizationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAuthorizationResultOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.Org }).(pulumi.StringOutput)
}

func (o LookupAuthorizationResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.OrgId }).(pulumi.StringOutput)
}

func (o LookupAuthorizationResultOutput) Permissions() GetAuthorizationPermissionArrayOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) []GetAuthorizationPermission { return v.Permissions }).(GetAuthorizationPermissionArrayOutput)
}

func (o LookupAuthorizationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupAuthorizationResultOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.Token }).(pulumi.StringOutput)
}

func (o LookupAuthorizationResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o LookupAuthorizationResultOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.User }).(pulumi.StringOutput)
}

func (o LookupAuthorizationResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAuthorizationResultOutput{})
}
